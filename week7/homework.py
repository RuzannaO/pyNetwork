class decode_me():
    def __init__(self, a):
        assert isinstance(a, str), "please enter a str type argument"
        assert len([x for x in a if x not in "10 "]) == 0, "must contain only 0, 1 or 'whitespace'"
        self.value = a

    def __str__(self):
        result = ""
        for i in self.value.split(' '):
            # print(chr(int(i,2)).encode())
            assert int(i, 2)<=255,"must be between 0-255 to be converted by ASCII"
            result += chr(int(i, 2))

        return (result)

a="01010000 01100101 01101111 01110000 01101100 01100101 00100000 01100001 01110011 01110011 " \
  "01110101 01101101 01100101 00100000 01110100 01101000 01100001 01110100 00100000 01110100 01101001 " \
  "01101101 01100101 00100000 01101001 01110011 00100000 01100001 00100000 01110011 01110100 01110010 " \
  "01101001 01100011 01110100 00100000 01110000 01110010 01101111 01100111 01110010 01100101 01110011 " \
  "01110011 01101001 01101111 01101110 00100000 01101111 01100110 00100000 01100011 01100001 01110101 " \
  "01110011 01100101 00100000 01110100 01101111 00100000 01100101 01100110 01100110 01100101 01100011 " \
  "01110100 00101100 00100000 01100010 01110101 01110100 00100000 01100001 01100011 01110100 01110101 " \
  "01100001 01101100 01101100 01111001 00100000 01100110 01110010 01101111 01101101 00100000 01100001 " \
  "00100000 01101110 01101111 01101110 00101101 01101100 01101001 01101110 01100101 01100001 01110010 " \
  "00101100 00100000 01101110 01101111 01101110 00101101 01110011 01110101 01100010 01101010 01100101 " \
  "01100011 01110100 01101001 01110110 01100101 00100000 01110110 01101001 01100101 01110111 01110000 " \
  "01101111 01101001 01101110 01110100 00100000 00101101 00100000 01101001 01110100 00100111 01110011 " \
  "00100000 01101101 01101111 01110010 01100101 00100000 01101100 01101001 01101011 01100101 00100000 " \
  "01100001 00100000 01100010 01101001 01100111 00100000 01100010 01100001 01101100 01101100 00100000 " \
  "01101111 01100110 00100000 01110111 01101001 01100010 01100010 01101100 01111001 00100000 01110111 " \
  "01101111 01100010 01100010 01101100 01111001 00101110 00101110 00101110 00100000 01110100 01101001 " \
  "01101101 01100101 00101101 01111001 00100000 01110111 01101001 01101101 01100101 01111001 00101110 " \
  "00101110 00101110 00100000 01110011 01110100 01110101 01100110 01100110 00101110"
  
x=decode_me(a)

print(x)
